# Use the official Ubuntu base image
FROM ubuntu:latest

# Set the working directory
WORKDIR /app

# Install necessary dependencies (incluyendo Java y unzip)
RUN apt-get update && apt-get install -y \
    curl \
    gnupg \
    unzip \
    nodejs \
    npm \
    python3 \
    python3-pip \
    openjdk-17-jdk \
    && apt-get clean

# Set JAVA_HOME (requerido para dependency-check)
ENV JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
ENV PATH=$JAVA_HOME/bin:$PATH

# Copy the Angular project into the container
COPY ./Myproyect/testing20265 /app
RUN ls -la

# Copy the OWASP Dependency Check script into the container
COPY ./INSEC-TEST-001-CHECK-INIT.sh /app/INSEC-TEST-001-CHECK-INIT.sh
# COPY ./INSEC-TEXT-002-THREATS-MODEL.py /app/INSEC-TEXT-002-THREATS-MODEL.py/

# Make the scripts executable
RUN chmod +x /app/INSEC-TEST-001-CHECK-INIT.sh
# RUN chmod +x /app/INSEC-TEXT-002-THREATS-MODEL.py/

# Install Angular CLI globally
RUN npm install -g @angular/cli

# Install project dependencies
RUN npm install

# Run the OWASP Dependency Check script
RUN /app/INSEC-TEST-001-CHECK-INIT.sh

# After running the OWASP Dependency Check script, you can optionally serve the generated report using Nginx
FROM nginx:alpine AS report-server
COPY ./reportes /usr/share/nginx/html
EXPOSE 8080

# Instructions to build and run the image:
# 1. Build the image with the following command:
#    docker build -t reportes-nginx .
# 2. Run the container with the following command:
#    docker run -d -p 8080:80 reportes-nginx
# 3. Open your browser and access the following URL to view the OWASP Dependency-Check report:
#    http://localhost:8080/dependency-check-report.html

# Expose the default Angular development server port
EXPOSE 4200

# Command to run the Angular project
CMD ["ng", "serve", "--host", "0.0.0.0"]

